// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  MANAGER
  MODERATOR
  ACE
  USER
}




model Game {
  id String @id @default(cuid())
  gameName String @unique
  onGoingTournament Tournament[]
  users UserGame[]
}

model Org {
id   String @id @default(cuid())
name String @unique @db.VarChar(255)
admin User @relation(fields: [adminId], references: [id])
adminId String @unique
managers OrgManager[]
}

model OrgManager {
  id String @id @default(cuid()) 
  orgId String 
  org Org @relation(fields: [orgId], references: [id])
  user User @relation(fields: [userId], references: [id])
  userId String 
  @@unique([userId, orgId])
}

model Profile {
  id String @id @default(cuid())
  user User @relation(fields: [userId], references: [id])
  userId String @unique
  gamePlay UserGame[]
  teams Team @relation(fields: [userTeam] , references: [id])
  userTeam String 
}

// Tournament that the user join & the Org Create
model Tournament {
  id String @id @default(cuid())
  noOfTeam Int
  game Game @relation(fields: [gameName], references: [gameName])
  gameName String
  noOfPlayerInTeam Int
  teams Team[] 
  
}

//Team for the User Join
model Team {
  id String @id @default(cuid())
  noOfPlayer Int
  users Profile[]
  tournaments Tournament[] 
}

model User{
  id String @id @default(cuid()) 
  username String  @unique @db.VarChar(255) 
  password String  
  email String @unique @db.VarChar(255)
  managerIn OrgManager[]
  orgJoin Org[]
  profile Profile?
  role UserRole @default(USER)
 
}

model UserGame{
  name Game @relation(fields: [gameName], references: [gameName])
  gameName String @unique
  userGameId String @unique
  ign Profile @relation(fields: [userIgn], references: [userId])
  userIgn String @unique
}